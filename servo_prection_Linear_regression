import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Sample data for servo prediction (replace this with your actual data)
speed = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])
position = np.array([3, 4, 2, 5, 6, 7, 8, 10, 9, 11])

# Reshape the data to meet scikit-learn's requirements
speed = speed.reshape(-1, 1)

# Split the data into training and testing sets
speed_train, speed_test, position_train, position_test = train_test_split(speed, position, test_size=0.2, random_state=42)

# Create a linear regression model
model = LinearRegression()

# Train the model
model.fit(speed_train, position_train)

# Make predictions on the test set
position_pred = model.predict(speed_test)

# Evaluate the model
mse = mean_squared_error(position_test, position_pred)
print(f'Mean Squared Error: {mse}')

# Plot the results
plt.scatter(speed_test, position_test, color='black', label='Actual Data')
plt.plot(speed_test, position_pred, color='blue', linewidth=3, label='Linear Regression Prediction')
plt.xlabel('Speed')
plt.ylabel('Position')
plt.title('Servo Prediction using Linear Regression')
plt.legend()
plt.show()
